<!DOCTYPE html>
<html>
<head>
  <title>Line Pay</title>
  <!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-wEmeIV1mKuiNpC+IOBjI7aAzPcEZeedi5yW5f2yOq55WWLwNGmvvx4Um1vskeMj0" crossorigin="anonymous"> -->
  <link rel="stylesheet" href="/styles.css">
  <style>
    body {
      background-color: #f8f9fa;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-start;
      height: 100vh;
      margin: 0;
      padding-top: 20px;
    }
    .btn {
      width: 200px;
      margin-top: 20px;
    }
  </style>
</head>
<body>
  <form action="/signup">
    <h1>Line Pay</h1>
    <label for="account">帳號</label>
    <input type="text" name="account" id="account" />
    <div class="account error"></div>

    <label for="password">密碼</label>
    <input type="password" name="password" id="password" />
    <div class="password error"></div>

    <label for="username">使用者名稱</label>
    <input type="text" name="username" id="username" />
    <div class="username error"></div>

    <div>
      <button id="register" type="submit">確認</button>
    </div>
  </form>
</body>
<script>
  const form = document.querySelector('form');
  const accountError = document.querySelector('.account.error');
  const passwordError = document.querySelector('.password.error');
  const usernameError = document.querySelector('.username.error');
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    // 為了讓每次載入 login 頁面時，都先將錯誤訊息的值清空，所以皆預設為空字串
    accountError.textContent = '';
    passwordError.textContent = '';
    usernameError.textContent = '';
    // 取得使用者輸入在表單上的值
    const account = form.account.value;
    const password = form.password.value;
    const username = form.username.value;
    try {
      const res = await fetch('/line_pay/register?institution_code=391', { 
        method: 'POST', 
        // `body` 的屬性值必須為 string 或 物件(object) 的形式
        body: JSON.stringify({ account, password, username }),
        headers: {'Content-Type': 'application/json'}
      });
      const data = await res.json();
      // 如果有錯誤訊息，就顯示在畫面上
      if (data.errors) {
        accountError.textContent = data.errors.account;
        passwordError.textContent = data.errors.password;
      }
      // 若有收到回傳的使用者資料，就導向相對應的首頁 (表示已成功登入)
      if (data) {
        location.assign("/line_pay");
      }
    }
    catch (err) {
      console.log(err.message);
    }
  });
</script>
</html>